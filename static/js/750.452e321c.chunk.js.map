{"version":3,"file":"static/js/750.452e321c.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/esm/Box/Box.js","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport defaultStyleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName,\n    styleFunctionSx = defaultStyleFunctionSx\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormRegisterEl = styled(Form)`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 100px;\n`;\n\nexport const InputRegisterEl = styled(Field)`\n  font-size: 16px;\n  width: 300px;\n  height: 30px;\n  margin-bottom: 40px;\n  padding: 5px;\n  border-radius: 5px;\n  outline-color: #5edcb0;\n  border-color: #0aab7e;\n  font-weight: 700;\n`;\n\nexport const RegisterLabel = styled.label`\n  font-size: 24px;\n  font-weight: 500;\n  margin-bottom: 5px;\n\n  color: #blue;\n`;\n\nexport const SubmitRegisterButton = styled.button`\n  width: 150px;\n  height: 40px;\n  background-color: #39bb96;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: 700;\n  cursor: pointer;\n  outline-color: #504e4e;\n`;\n\nexport const Error = styled.div`\n  text-align: center;\n  color: red;\n  margin-top: 15px;\n  font-weight: 700;\n  font-size: 20px;\n`;\n\nexport const InputError = styled(ErrorMessage)`\n  width: 300px;\n  text-align: center;\n  color: red;\n  margin-bottom: 15px;\n  font-weight: 500;\n  font-size: 16px;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { selectRegisterError } from 'redux/auth/selectors';\nimport { updateErrorRegister } from 'redux/auth/authSlice';\nimport { useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport { TextField } from 'formik-material-ui';\n\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\n\nimport Box from '@mui/material/Box';\n\nimport {\n  FormRegisterEl,\n  InputRegisterEl,\n  // RegisterLabel,\n  Error,\n  // InputError,\n} from 'components/RegisterForm/RegisterForm.styled';\nimport { Paper, Typography } from '@mui/material';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email('Not a proper email'),\n  password: yup.string().min(6).required('Password is required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const error = useSelector(selectRegisterError);\n\n  useEffect(() => {\n    dispatch(updateErrorRegister(error));\n    return () => {\n      dispatch(updateErrorRegister(null));\n    };\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n\n    if (error !== null) {\n      resetForm();\n    }\n  };\n\n  return (\n    <Box>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <FormRegisterEl><Paper elevation={5} sx={{p:3, display:'flex', alignItems: \"center\", flexDirection:\"column\"}}>\n          {/* <RegisterLabel>Username</RegisterLabel> */}\n          <Typography variant='h5' color={'#0d47a1'}>Username</Typography>\n          <InputRegisterEl component={TextField} type=\"text\" name=\"name\" placeholder=\"Enter name\" />\n          \n          {/* <InputError name=\"name\" component=\"div\" /> */}\n\n\n\n          {/* <RegisterLabel>Email</RegisterLabel> */}\n          <Typography variant='h5' color={'#0d47a1'}>Email</Typography>\n          <InputRegisterEl\n          component={TextField}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n          />\n           \n          {/* <InputError name=\"email\" component=\"div\" /> */}\n\n          {/* <RegisterLabel>Password</RegisterLabel> */}\n          <Typography variant='h5' color={'#0d47a1'}>Password</Typography>\n          <InputRegisterEl\n            component={TextField}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter password\"\n          />\n          \n\n          {/* <InputError name=\"password\" component=\"div\" /> */}\n\n          {/* <SubmitRegisterButton type=\"submit\">Register</SubmitRegisterButton> */}\n          <Button variant=\"contained\" type=\"submit\">Register</Button>\n          </Paper>\n        </FormRegisterEl>\n      </Formik>\n      \n        {error && (\n        <Error>\n         Oops, something went wrong. Try again\n        </Error>\n      )}\n    \n    </Box>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}"],"names":["_excluded","Box","options","defaultTheme","defaultClassName","generateClassName","styleFunctionSx","defaultStyleFunctionSx","BoxRoot","styled","shouldForwardProp","prop","React","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","className","component","other","_objectWithoutPropertiesLoose","_jsx","_extends","as","clsx","createBox","createTheme","ClassNameGenerator","FormRegisterEl","Form","InputRegisterEl","Field","Error","ErrorMessage","schema","yup","shape","name","required","email","password","min","RegisterForm","dispatch","useDispatch","error","useSelector","selectRegisterError","useEffect","updateErrorRegister","initialValues","onSubmit","values","resetForm","register","validationSchema","Paper","elevation","sx","p","display","alignItems","flexDirection","Typography","variant","color","TextField","type","placeholder","Button","Register","Helmet"],"sourceRoot":""}